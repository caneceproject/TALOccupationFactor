@model TALOccupationFactor.ViewModels.CalculateDataViewModel
@{
    ViewBag.Title = "Calculate Data";
}

<h4>Calculate Data</h4>

@using (Html.BeginForm("CalculateData", "Home", FormMethod.Post))
{
    <div class="form-group">
        @Html.LabelFor(p => p.Name, new { @class = "control-label" })
        @Html.TextBoxFor(p => p.Name, new { @class = "form-control", @readonly = "true" })
    </div>

    <div class="form-group">
        @Html.LabelFor(p => p.Age, new { @class = "control-label" })
        @Html.TextBoxFor(p => p.Age, new { @class = "form-control", @readonly = "true" })
    </div>

    <div class="form-group">
        @Html.LabelFor(p => p.DOB, new { @class = "control-label" })
        @Html.TextBoxFor(p => p.DOB, "{0:dd/MM/yyyy}", new { @class = "form-control", @readonly = "true" })
    </div>

    <div class="form-group">
        @Html.LabelFor(p => p.Occupation, new { @class = "control-label" })
        @Html.DropDownListFor(p => p.Occupation, new SelectList(Model.OccupationList, "Value", "Text"),
             new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.Occupation, null, new { @class = "small text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(p => p.SumInsured, new { @class = "control-label" })
        @Html.TextBoxFor(p => p.SumInsured, "{0:0.00}", new { @class = "form-control", @maxlength = "10" })
        @Html.ValidationMessageFor(p => p.SumInsured, null, new { @class = "small text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(p => p.MonthlyExpenses, new { @class = "control-label" })
        @Html.TextBoxFor(p => p.MonthlyExpenses, "{0:0.00}", new { @class = "form-control", @maxlength = "10" })
        @Html.ValidationMessageFor(p => p.MonthlyExpenses, null, new { @class = "small text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(p => p.State, new { @class = "control-label" })
        @Html.DropDownListFor(p => p.State, new SelectList(Model.StateList, "Value", "Text"),
             new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.State, null, new { @class = "small text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(p => p.Postcode, new { @class = "control-label" })
        @Html.TextBoxFor(p => p.Postcode, new { @class = "form-control", @maxlength = "4" })
        @Html.ValidationMessageFor(p => p.Postcode, null, new { @class = "small text-danger" })
    </div>

    <div class="form-inline">
        <input type="submit" name="submitButton" value="Back" class="btn btn-default" />
        <input type="submit" name="submitButton" value="Calculate" class="btn btn-primary" />

        @if (Model.Total > 0)
        {
            <span>Total value: </span>
            <b>@Html.DisplayFor(p => p.Total, new { @class = "control-label" })</b>
        }

    </div>
}

